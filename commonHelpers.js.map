{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\"\n\nconst userDate = document.querySelector(\"#datetime-picker\");\nconst button = document.querySelector(\"button\");\nconst daysElement = document.querySelector(\"[data-days]\");\nconst hoursElement = document.querySelector(\"[data-hours]\");\nconst minutesElement = document.querySelector(\"[data-minutes]\");\nconst secondsElement = document.querySelector(\"[data-seconds]\");\n\nlet selectedDate;\nbutton.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < new Date()) {\n      button.disabled = true;\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: \"topRight\",\n    });\n    }else {\n      button.disabled = false;\n      selectedDate = selectedDates[0].getTime();\n    };\n  },  \n};\n\nconst datePicker = flatpickr(userDate, options);\n\nbutton.addEventListener(\"click\", () => {\n  button.disabled = true;\n  userDate.disabled = true;\n  \n  let countdownInterval = setInterval (() => {\n    let timeDifference = selectedDate - new Date().getTime();\n    let time = convertMs(timeDifference);\n    let {days, hours, minutes, seconds} = time;\n\n    daysElement.textContent = `${addLeadingZero(days)}`\n    hoursElement.textContent = `${addLeadingZero(hours)}`\n    minutesElement.textContent = `${addLeadingZero(minutes)}`\n    secondsElement.textContent = `${addLeadingZero(seconds)}`\n\n    timeDifference -= 1000;\n\n    if (timeDifference <= 0) {\n      clearInterval(countdownInterval);\n      userDate.disabled = false;\n    }\n  }, 1000);\n})\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}"],"names":["userDate","button","daysElement","hoursElement","minutesElement","secondsElement","selectedDate","options","selectedDates","iziToast","flatpickr","countdownInterval","timeDifference","time","convertMs","days","hours","minutes","seconds","addLeadingZero","ms","value"],"mappings":"sFAKA,MAAMA,EAAW,SAAS,cAAc,kBAAkB,EACpDC,EAAS,SAAS,cAAc,QAAQ,EACxCC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAE9D,IAAIC,EACJL,EAAO,SAAW,GAElB,MAAMM,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,GAAK,IAAI,MACzBP,EAAO,SAAW,GAClBQ,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAClB,CAAK,IAECR,EAAO,SAAW,GAClBK,EAAeE,EAAc,GAAG,QAAO,EAE1C,CACH,EAEmBE,EAAUV,EAAUO,CAAO,EAE9CN,EAAO,iBAAiB,QAAS,IAAM,CACrCA,EAAO,SAAW,GAClBD,EAAS,SAAW,GAEpB,IAAIW,EAAoB,YAAa,IAAM,CACzC,IAAIC,EAAiBN,EAAe,IAAI,KAAM,EAAC,QAAO,EAClDO,EAAOC,EAAUF,CAAc,EAC/B,CAAC,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAIL,EAEtCX,EAAY,YAAc,GAAGiB,EAAeJ,CAAI,IAChDZ,EAAa,YAAc,GAAGgB,EAAeH,CAAK,IAClDZ,EAAe,YAAc,GAAGe,EAAeF,CAAO,IACtDZ,EAAe,YAAc,GAAGc,EAAeD,CAAO,IAEtDN,GAAkB,IAEdA,GAAkB,IACpB,cAAcD,CAAiB,EAC/BX,EAAS,SAAW,GAEvB,EAAE,GAAI,CACT,CAAC,EAED,SAASc,EAAUM,EAAI,CAQrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAE1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EAEpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EAEjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeE,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC"}